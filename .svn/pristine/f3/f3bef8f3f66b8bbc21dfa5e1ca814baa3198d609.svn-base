package kr.or.ddit.controller.doctor;

import java.util.List;
import java.util.Map;

import javax.inject.Inject;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.service.IMainChartService;
import kr.or.ddit.vo.ChartVO;
import kr.or.ddit.vo.MemberVO;
import lombok.extern.slf4j.Slf4j;

@Controller
@RequestMapping("/doctor")
@Slf4j
public class mainChartController {
	
	@Inject
	IMainChartService mainChartService;
	
	@GetMapping("/mainChart")
	public String mainChart(Model model) {
		
		log.info("mainChart() 실행...!");
		
		int empNo=1;
		
		List<MemberVO> watingList = mainChartService.getWatingList(empNo);
		
		model.addAttribute("watingList", watingList);
		
		return "doctor/mainChart";
		
	}
//	@ResponseBody
//	@GetMapping("/Chart")
//	public void Chart(Model model) {
//		
//		log.info("chart 실행...!");
//		
//		int empNo=1;
//		
//		List<MemberVO> watingList = mainChartService.getWatingList(empNo);
//		
//		model.addAttribute("watingList", watingList);
//		
//	}
	
	//동적으로 환자목록 불러오기
	@GetMapping("/getWatingList")
	@ResponseBody
	public ResponseEntity<List<MemberVO>> getWatingList(){
		
		log.info("getWatingList() 실행...!");
		
		int empNo=1;
		List<MemberVO> watingList = mainChartService.getWatingList(empNo);
		
		return new ResponseEntity<List<MemberVO>>(watingList, HttpStatus.OK);
	}
	
	
	//대기환자에서 환자이름 클릭시 미리보기 나오게 하기
	@ResponseBody
	@PostMapping("/patientPreview")
	@PreAuthorize("hasRole('ROLE_ADMIN')")
	public ResponseEntity<MemberVO> patientPreview(@RequestBody Map<String, String> map){
		log.info("getPatientChart() 실행...!");
		
		int memNo = Integer.parseInt(map.get("memNo"));
		
		log.info("회원번호 : " +memNo);
		
		MemberVO patientPreview= mainChartService.patientPreview(memNo);
		
		
		return new ResponseEntity<MemberVO>(patientPreview, HttpStatus.OK);
		
		
	}
	
	
	//대기환자에서 환자이름 클릭시 환자차트 불러오기
	@ResponseBody
	@PostMapping("/patientChart")
	@PreAuthorize("hasRole('ROLE_ADMIN')")
	public ResponseEntity<List<ChartVO>> getPatientChart(@RequestBody Map<String, String> map){
		log.info("getPatientChart() 실행...!");
		
		int memNo = Integer.parseInt(map.get("memNo"));
		
		log.info("회원번호 : " +memNo);
		
		List<ChartVO> patientChartList= mainChartService.getPatientChart(memNo);
		
		
		return new ResponseEntity<List<ChartVO>>(patientChartList, HttpStatus.OK);
		
		
		
	}

}
